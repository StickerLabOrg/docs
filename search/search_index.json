{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo \u00e0 Documenta\u00e7\u00e3o do Hub do Torcedor TESTE","text":""},{"location":"#bem-vindo-a-documentacao-do-hub-do-torcedor","title":"Bem-vindo \u00e0 Documenta\u00e7\u00e3o do Hub do Torcedor","text":"<p>Este site cont\u00e9m toda a documenta\u00e7\u00e3o do projeto Hub do Torcedor, desenvolvido para a disciplina de T\u00f3picos de Projeto e Programa\u00e7\u00e3o de Engenharia (TPPE). O projeto consiste em uma plataforma web que combina um \u00e1lbum de figurinhas digital com um sistema de palpites em jogos reais, incluindo uma economia virtual com moedas e pacotes.</p>"},{"location":"#navegacao-rapida","title":"Navega\u00e7\u00e3o R\u00e1pida","text":"<p>Navegue pelos artefatos do projeto utilizando os cards abaixo.</p> <ul> <li> <p>Concep\u00e7\u00e3o do Projeto:</p> <ul> <li>Escopo do MVP</li> <li>Requisitos Elicitados</li> <li>Arquitetura</li> <li>Diagramas UML</li> </ul> </li> <li> <p>Planejamento \u00c1gil:</p> <ul> <li>Backlog</li> </ul> </li> <li> <p>Design e UI</p> <ul> <li>Guia de Estilo</li> <li>Prot\u00f3tipo</li> <li>Design Tokens</li> </ul> </li> <li> <p>Guias de Desenvolvimento:</p> <ul> <li>Guia de Execu\u00e7\u00e3o</li> <li>Guia de Estilo de C\u00f3digo</li> <li>Vis\u00e3o Geral do Frontend</li> </ul> </li> </ul>"},{"location":"#repositorios-do-projeto","title":"Reposit\u00f3rios do Projeto","text":"<p>Acesse o c\u00f3digo-fonte completo nos reposit\u00f3rios do GitHub.</p> <ul> <li>Backend (FastAPI)</li> <li>Frontend (React)</li> <li>Documenta\u00e7\u00e3o (MkDocs)</li> </ul>"},{"location":"#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 25/09/2025 Cria\u00e7\u00e3o da estrutura inicial da documenta\u00e7\u00e3o. Lucas V\u00edctor Lucas V\u00edctor <code>1.1</code> 29/09/2025 Reformula\u00e7\u00e3o da p\u00e1gina inicial com layout de cards e destaques. Gemini Lucas V\u00edctor"},{"location":"Documentacao/arquitetura/","title":"Documento de Arquitetura","text":""},{"location":"Documentacao/arquitetura/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento descreve a arquitetura de software da plataforma Hub do Torcedor. O objetivo \u00e9 fornecer uma vis\u00e3o geral de alto n\u00edvel dos componentes do sistema, suas responsabilidades, intera\u00e7\u00f5es e os padr\u00f5es de design que guiam a sua constru\u00e7\u00e3o. A arquitetura foi projetada para ser modular, escal\u00e1vel e manuten\u00edvel, utilizando uma abordagem moderna de desenvolvimento web com separa\u00e7\u00e3o clara de responsabilidades entre o cliente (frontend) e o servidor (backend).</p>"},{"location":"Documentacao/arquitetura/#visao-geral-da-arquitetura","title":"Vis\u00e3o Geral da Arquitetura","text":"<p>A plataforma adota uma arquitetura de microsservi\u00e7os desacoplada, baseada em uma comunica\u00e7\u00e3o via API RESTful. Os principais componentes s\u00e3o:</p> <ol> <li>Frontend (Single-Page Application): Uma aplica\u00e7\u00e3o rica e interativa que roda no navegador do usu\u00e1rio, constru\u00edda com React. \u00c9 respons\u00e1vel por toda a interface e experi\u00eancia do usu\u00e1rio.</li> <li>Backend (API RESTful): Um servi\u00e7o respons\u00e1vel por toda a l\u00f3gica de neg\u00f3cio, gerenciamento de dados e comunica\u00e7\u00e3o com servi\u00e7os externos. Constru\u00eddo com FastAPI.</li> <li>Banco de Dados: Um banco de dados relacional PostgreSQL, respons\u00e1vel pela persist\u00eancia de todos os dados da aplica\u00e7\u00e3o.</li> <li>API Externa: Um servi\u00e7o de terceiros (ex: API-Football) que fornece os dados em tempo real sobre partidas e estat\u00edsticas de futebol.</li> </ol> <p>A comunica\u00e7\u00e3o principal ocorre quando o Frontend envia requisi\u00e7\u00f5es HTTP (ex: GET, POST) para o Backend, que por sua vez processa a requisi\u00e7\u00e3o, interage com o Banco de Dados e retorna os dados em formato JSON.</p>"},{"location":"Documentacao/arquitetura/#diagrama-da-arquitetura","title":"Diagrama da Arquitetura","text":"<p>Figura 1: Diagrama de Arquitetura de Alto N\u00edvel</p> <pre><code>graph TD\n    A[\"Usu\u00e1rio\"] --&gt;|Interage via Navegador| B(\"Frontend &lt;br&gt; React SPA\");\n    B --&gt;|Requisi\u00e7\u00f5es HTTP/JSON| C(\"Backend &lt;br&gt; API RESTful FastAPI\");\n    C --&gt;|Consultas SQL| D(\"Banco de Dados &lt;br&gt; PostgreSQL\");\n    C --&gt;|Busca Dados Esportivos| E[\"API Externa de Futebol\"];</code></pre> <p>Fonte: Lucas V\u00edctor, 2025</p>"},{"location":"Documentacao/arquitetura/#padrao-de-design-model-view-controller-mvc","title":"Padr\u00e3o de Design: Model-View-Controller (MVC)","text":"<p>O projeto aplica os princ\u00edpios do padr\u00e3o de design MVC de forma distribu\u00edda entre o backend e o frontend, aproveitando o melhor de cada tecnologia.</p> <p>Tabela 1: Aplica\u00e7\u00e3o do Padr\u00e3o MVC no Projeto</p> <p>Tabela 1: Aplica\u00e7\u00e3o do Padr\u00e3o MVC no Projeto</p> Componente MVC Responsabilidade no Backend (FastAPI) Responsabilidade no Frontend (React) Model (Modelo) Classes SQLAlchemy que mapeiam as tabelas do banco de dados e cont\u00eam a l\u00f3gica de neg\u00f3cio. O estado dos componentes, gerenciado por hooks como <code>useState</code> e <code>useEffect</code>, que armazena os dados vindos da API. View (Vis\u00e3o) Esquemas Pydantic que definem a estrutura e formato dos dados de resposta (JSON). Os Componentes e seu JSX, que renderizam o HTML e formam a interface com a qual o usu\u00e1rio interage. Controller (Controlador) Os Endpoints/Rotas (<code>@app.get</code>, <code>@app.post</code>) que recebem as requisi\u00e7\u00f5es, orquestram as a\u00e7\u00f5es e retornam a resposta. As fun\u00e7\u00f5es e manipuladores de eventos (<code>onClick</code>, <code>onSubmit</code>) dentro dos componentes que respondem \u00e0s a\u00e7\u00f5es do usu\u00e1rio. <p>Fonte: Lucas V\u00edctor, 2025</p>"},{"location":"Documentacao/arquitetura/#estrutura-de-diretorios-proposta","title":"Estrutura de Diret\u00f3rios Proposta","text":"<p>A estrutura de pastas do projeto refletir\u00e1 diretamente o padr\u00e3o MVC para garantir a organiza\u00e7\u00e3o do c\u00f3digo.</p> <p>Backend (FastAPI):</p> <pre><code>backend/\n\u2514\u2500\u2500 app/\n    \u251c\u2500\u2500 models/         # (M) Modelos SQLAlchemy\n    \u251c\u2500\u2500 schemas/        # (V) Esquemas Pydantic\n    \u251c\u2500\u2500 routers/        # (C) Controladores (Endpoints)\n    \u251c\u2500\u2500 services/       # L\u00f3gica de neg\u00f3cio extra\n    \u251c\u2500\u2500 database.py     # Configura\u00e7\u00e3o do BD\n    \u2514\u2500\u2500 main.py         # Ponto de entrada da aplica\u00e7\u00e3o\n</code></pre> <p>Frontend (React):</p> <pre><code>frontend/\n\u2514\u2500\u2500 src/\n    \u251c\u2500\u2500 components/     # (V) Componentes reutiliz\u00e1veis (Bot\u00f5es, Cards)\n    \u251c\u2500\u2500 pages/          # (V) P\u00e1ginas completas (Login, Dashboard)\n    \u251c\u2500\u2500 services/       # (C) L\u00f3gica de chamada \u00e0 API\n    \u251c\u2500\u2500 contexts/       # (M) Gerenciamento de estado global\n    \u2514\u2500\u2500 App.js          # Ponto de entrada da aplica\u00e7\u00e3o\n</code></pre>"},{"location":"Documentacao/arquitetura/#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":"<ul> <li>Backend: Python 3.9+, FastAPI, SQLAlchemy, Pydantic, Uvicorn.</li> <li>Frontend: JavaScript, React 18+, Axios.</li> <li>Banco de Dados: PostgreSQL 13+.</li> <li>Infraestrutura e Ambiente: Docker, Docker Compose.</li> </ul>"},{"location":"Documentacao/arquitetura/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 25/09/2025 Cria\u00e7\u00e3o do documento, definindo a arquitetura, o padr\u00e3o MVC e as tecnologias. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/backlog/","title":"Backlog","text":""},{"location":"Documentacao/backlog/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A metodologia \u00e1gil \u00e9 uma abordagem flex\u00edvel de gest\u00e3o de projetos que se concentra na colabora\u00e7\u00e3o, adapta\u00e7\u00e3o e entrega cont\u00ednua de valor. No contexto dessa metodologia, o Product Backlog desempenha um papel crucial. Ele \u00e9 uma lista priorizada de requisitos, funcionalidades e tarefas que precisam ser executados em um projeto. O Product Backlog do nosso projeto est\u00e1 focado na divis\u00e3o de grandes tarefas em Temas, \u00c9picos e Hist\u00f3rias de Usu\u00e1rio, criando uma estrutura clara do trabalho a ser feito.</p>"},{"location":"Documentacao/backlog/#metodologia","title":"Metodologia","text":"<p>A metodologia utilizada para a defini\u00e7\u00e3o do Backlog do Hub do Torcedor parte inicialmente dos requisitos elicitados. Atrav\u00e9s destes, identificamos grandes blocos de trabalho (\u00c9picos) que se agrupam em objetivos estrat\u00e9gicos (Temas). Os \u00c9picos s\u00e3o ent\u00e3o detalhados em tarefas menores e focadas no valor para o usu\u00e1rio, as Hist\u00f3rias de Usu\u00e1rio.</p>"},{"location":"Documentacao/backlog/#backlog_1","title":"Backlog","text":""},{"location":"Documentacao/backlog/#temas","title":"Temas","text":"<ul> <li>T01 - Gest\u00e3o de Conta e Perfil: Foco na experi\u00eancia do usu\u00e1rio para acessar e gerenciar sua identidade na plataforma.</li> <li>T02 - Jogo e Cole\u00e7\u00e3o: Foco no ciclo principal de intera\u00e7\u00e3o do usu\u00e1rio com o sistema de palpites, recompensas e o \u00e1lbum de figurinhas.</li> </ul>"},{"location":"Documentacao/backlog/#epicos","title":"\u00c9picos","text":"<ul> <li>EP01 - Gerenciamento de Conta: Eu, como usu\u00e1rio, desejo gerenciar minha conta para acessar a plataforma de forma segura e personalizada.</li> <li>EP02 - Intera\u00e7\u00e3o com Partidas: Eu, como torcedor, desejo interagir com as partidas reais para testar meu conhecimento.</li> <li>EP03 - Cole\u00e7\u00e3o de Figurinhas: Eu, como colecionador, desejo construir e gerenciar minha cole\u00e7\u00e3o de figurinhas digitais.</li> </ul> <p>Tabela 1: Tabela de backlog detalhada para a Entrega 1.</p> ID Hist\u00f3ria de Usu\u00e1rio Crit\u00e9rios de Aceita\u00e7\u00e3o (CA) Prioridade US01 Eu, como visitante, quero poder me cadastrar na plataforma para ter um perfil. - Dado que preencho os campos (nome, email, etc.) corretamente, QUANDO clico em \"Criar Conta\", ENT\u00c3O um novo usu\u00e1rio \u00e9 criado no sistema. Essencial US02 Eu, como usu\u00e1rio, quero poder fazer login para acessar minha conta. - Dado que insiro um e-mail e senha v\u00e1lidos, QUANDO clico em \"Entrar\", ENT\u00c3O sou autenticado e redirecionado para o Dashboard. Essencial US03 Eu, como usu\u00e1rio, quero ver meu saldo de moedas de forma vis\u00edvel na interface. - Dado que estou logado, QUANDO acesso o Dashboard, ENT\u00c3O meu saldo atual de moedas deve ser exibido. Essencial US04 Eu, como torcedor, quero poder visualizar os jogos da pr\u00f3xima rodada. - Dado que estou no Dashboard, ENT\u00c3O devo ver uma lista de partidas futuras. Essencial US05 Eu, como torcedor, quero poder submeter um palpite de placar para um jogo. - Dado que escolho uma partida, QUANDO insiro os placares e salvo, ENT\u00c3O meu palpite deve ser registrado no sistema. Essencial US06 Eu, como torcedor, quero ganhar moedas como recompensa por meus acertos nos palpites. - Dado que fiz um palpite correto e a partida terminou, QUANDO acesso minha conta, ENT\u00c3O meu saldo de moedas deve ter aumentado. Essencial US07 Eu, como colecionador, quero poder comprar pacotes de figurinhas na loja usando minhas moedas. - Dado que tenho moedas suficientes, QUANDO clico em \"Comprar Pacote\", ENT\u00c3O meu saldo \u00e9 debitado e um pacote \u00e9 adicionado \u00e0 minha conta. Essencial US08 Eu, como colecionador, quero poder abrir um pacote para descobrir minhas novas figurinhas. - Dado que possuo um pacote, QUANDO clico para abri-lo, ENT\u00c3O uma interface revela as figurinhas aleat\u00f3rias que ganhei. Essencial US09 Eu, como colecionador, quero poder visualizar meu \u00e1lbum e ver quais figurinhas eu tenho. - Dado que estou logado, QUANDO acesso a p\u00e1gina \"Meu \u00c1lbum\", ENT\u00c3O devo ver o progresso da minha cole\u00e7\u00e3o e a lista de figurinhas que possuo. Importante US10 Eu, como usu\u00e1rio, quero poder fazer logout para encerrar minha sess\u00e3o com seguran\u00e7a. - Dado que estou logado, QUANDO clico no bot\u00e3o \"Sair\", ENT\u00c3O minha sess\u00e3o \u00e9 encerrada e sou redirecionado para a tela de login. Importante <p>Fonte: Lucas V\u00edctor, 2025</p>"},{"location":"Documentacao/backlog/#bibliografia","title":"Bibliografia","text":"<p>COHN, Mike. User Stories Applied: For Agile Software Development. Addison-Wesley Professional, 2004.</p> <p>SERRANO, Milene, SERRANO, Maur\u00edcio. Requisitos (Aula 015): Elicita\u00e7\u00e3o, Modelagem e An\u00e1lise. UnB Gama, Bras\u00edlia, 2023.</p>"},{"location":"Documentacao/backlog/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 25/09/2025 Cria\u00e7\u00e3o do documento com 10 hist\u00f3rias de usu\u00e1rio iniciais. Lucas V\u00edctor Lucas V\u00edctor <code>2.0</code> 28/09/2025 Atualiza\u00e7\u00e3o das hist\u00f3rias para o sistema de moedas e adi\u00e7\u00e3o de Crit\u00e9rios de Aceita\u00e7\u00e3o. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/code-style/","title":"Guia de Estilo de C\u00f3digo","text":""},{"location":"Documentacao/code-style/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento define as diretrizes e boas pr\u00e1ticas de codifica\u00e7\u00e3o para o backend do projeto Hub do Torcedor. O objetivo \u00e9 manter um c\u00f3digo limpo, leg\u00edvel, consistente e de f\u00e1cil manuten\u00e7\u00e3o.</p>"},{"location":"Documentacao/code-style/#1-ferramentas-linting","title":"1. Ferramentas (Linting)","text":"<p>Para garantir a conformidade com as boas pr\u00e1ticas, utilizaremos um linter. A ferramenta recomendada \u00e9 o Ruff ou Flake8, que deve ser configurada para seguir o padr\u00e3o de estilo PEP 8.</p>"},{"location":"Documentacao/code-style/#2-principios-de-design-solid","title":"2. Princ\u00edpios de Design (SOLID)","text":"<p>O desenvolvimento do backend deve seguir, sempre que poss\u00edvel, os cinco princ\u00edpios SOLID da Programa\u00e7\u00e3o Orientada a Objetos.</p> <ul> <li>S - Princ\u00edpio da Responsabilidade \u00danica (Single Responsibility): Cada classe ou m\u00f3dulo deve ter uma, e somente uma, raz\u00e3o para mudar. Nossas classes <code>Controller</code>, <code>Model</code> e <code>View</code> seguem este princ\u00edpio.</li> <li>O - Princ\u00edpio do Aberto/Fechado (Open/Closed): As entidades de software (classes, m\u00f3dulos, fun\u00e7\u00f5es) devem ser abertas para extens\u00e3o, mas fechadas para modifica\u00e7\u00e3o.</li> <li>L - Princ\u00edpio da Substitui\u00e7\u00e3o de Liskov (Liskov Substitution): Objetos de uma superclasse devem ser substitu\u00edveis por objetos de uma subclasse sem afetar a corretude do programa.</li> <li>I - Princ\u00edpio da Segrega\u00e7\u00e3o de Interfaces (Interface Segregation): Uma classe n\u00e3o deve ser for\u00e7ada a implementar interfaces e m\u00e9todos que n\u00e3o ir\u00e1 utilizar.</li> <li>D - Princ\u00edpio da Invers\u00e3o de Depend\u00eancia (Dependency Inversion): M\u00f3dulos de alto n\u00edvel n\u00e3o devem depender de m\u00f3dulos de baixo n\u00edvel. Ambos devem depender de abstra\u00e7\u00f5es. O sistema de inje\u00e7\u00e3o de depend\u00eancia do FastAPI (<code>Depends</code>) nos ajuda a aplicar este princ\u00edpio.</li> </ul>"},{"location":"Documentacao/code-style/#3-praticas-de-orientacao-a-objetos","title":"3. Pr\u00e1ticas de Orienta\u00e7\u00e3o a Objetos","text":"<ul> <li>Responsabilidades \u00danicas: Nossos controllers cont\u00eam a l\u00f3gica de neg\u00f3cio, os models a persist\u00eancia de dados e as views a camada de API.</li> <li>Nomes Claros e Expl\u00edcitos: Vari\u00e1veis, fun\u00e7\u00f5es e classes devem ter nomes que descrevam claramente seu prop\u00f3sito (ex: <code>criar_nova_colecao</code> em vez de <code>cria_col</code>).</li> </ul>"},{"location":"Documentacao/code-style/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 28/09/2025 Cria\u00e7\u00e3o do documento definindo as diretrizes de estilo de c\u00f3digo e boas pr\u00e1ticas. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/diagramas_UML/","title":"Diagramas UML","text":"<p>Esta se\u00e7\u00e3o apresenta os diagramas UML que modelam a estrutura e o comportamento do sistema \"Hub do Torcedor\", conforme exigido pelo Passo 6 do checklist do projeto.</p>"},{"location":"Documentacao/diagramas_UML/#1-diagrama-de-classes","title":"1. Diagrama de Classes","text":"<p>O diagrama abaixo modela as entidades do MVP, seus atributos e relacionamentos.</p> <p>Diagrama gerado via Mermaid:</p> <pre><code>classDiagram\n    direction LR\n    class Usuario {\n        -id: int\n        -nome: String\n        -email: String\n        -is_admin: boolean\n        -moedas: int\n        -time_do_coracao: String\n        +cadastrar(): void\n        +login(): boolean\n        +fazer_palpite(palpite: Palpite): void\n        +editar_palpite(palpite: Palpite): void\n        +excluir_palpite(palpite: Palpite): void\n        +comprarPacote(): ArrayList~Figurinha~\n    }\n    class Palpite {\n        -id: int\n        -palpite_gols_casa: int\n        -palpite_gols_visitante: int\n        +verificarAcerto(partida: Partida): boolean\n    }\n    class Partida {\n        -id: int\n        -time_casa: String\n        -time_visitante: String\n        -data_jogo: Datetime\n        +get_status(): String\n        +atualizar_resultado(gols_casa: int, gols_visitante: int): void\n    }\n    class Colecao {\n        -id: int\n        -nome: String\n        -ano: int\n        -ativo: boolean\n        +criar(): void\n        +listar(): ArrayList~Colecao~\n        +atualizar(): void\n        +excluir(): void\n    }\n    class Figurinha {\n        -id: int\n        -nome_jogador: String\n        -numero: int\n        -posicao: String\n        -time: String\n    }\n    Usuario \"1\" -- \"0..*\" Palpite : gerencia\n    Partida \"1\" -- \"0..*\" Palpite : refere-se a\n    Colecao \"1\" *-- \"1..*\" Figurinha : \u00e9 composta por</code></pre> <p>Fonte: Lucas V\u00edctor, 2025</p> <p>Diagrama gerado via Ferramenta Externa (Astah):</p> <p> </p> <p>Fonte: Lucas V\u00edctor, 2025</p>"},{"location":"Documentacao/diagramas_UML/#2-diagrama-de-sequencia","title":"2. Diagrama de Sequ\u00eancia","text":"<p>O diagrama a seguir ilustra o fluxo de intera\u00e7\u00e3o entre os componentes do sistema durante o caso de uso \"Comprar Pacote de Figurinhas\", um dos fluxos mais importantes da aplica\u00e7\u00e3o.</p> <p>Diagrama gerado via Mermaid:</p> <pre><code>sequenceDiagram\n    participant Usu\u00e1rio as Frontend (React)\n    participant API as Rota (FastAPI)\n    participant Controller as L\u00f3gica de Neg\u00f3cio\n    participant DB as Banco de Dados (PostgreSQL)\n\n    Usu\u00e1rio-&gt;&gt;+API: 1. POST /loja/comprar-pacote\n    API-&gt;&gt;+Controller: 2. Chama comprar_pacote(usuario_id)\n\n    Controller-&gt;&gt;+DB: 3. Verificar saldo de moedas do usu\u00e1rio\n    DB--&gt;&gt;-Controller: 4. Retorna saldo\n\n    alt Saldo suficiente\n        Controller-&gt;&gt;+DB: 5. Subtrair moedas do usu\u00e1rio\n        DB--&gt;&gt;-Controller: (Confirma\u00e7\u00e3o)\n\n        Controller-&gt;&gt;+DB: 6. Sortear N figurinhas\n        DB--&gt;&gt;-Controller: (Confirma\u00e7\u00e3o)\n\n        Controller-&gt;&gt;+DB: 7. Adicionar figurinhas \u00e0 cole\u00e7\u00e3o do usu\u00e1rio\n        DB--&gt;&gt;-Controller: 8. Confirma transa\u00e7\u00e3o\n\n        Controller--&gt;&gt;API: 9. Retorna sucesso (JSON)\n    else Saldo insuficiente\n        Controller--&gt;&gt;API: 9. Retorna erro de saldo\n    end\n\n    API--&gt;&gt;Usu\u00e1rio: 10. Resposta HTTP</code></pre> <p>Fonte: Lucas V\u00edctor, 2025</p> <p>Diagrama gerado via Ferramenta Externa (Astah):</p> <p></p>"},{"location":"Documentacao/diagramas_UML/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 28/09/2025 Cria\u00e7\u00e3o do documento com o Diagrama de Classes. Lucas V\u00edctor Lucas V\u00edctor <code>2.0</code> 28/09/2025 Adi\u00e7\u00e3o do Diagrama de Sequ\u00eancia e placeholders para imagens. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/escopo/","title":"Escopo do MVP","text":""},{"location":"Documentacao/escopo/#plano-do-mvp-hub-do-torcedor-tppe","title":"Plano do MVP - Hub do Torcedor (TPPE)","text":"<p>Vers\u00e3o: 2.0 Data: 27 de Setembro de 2025</p>"},{"location":"Documentacao/escopo/#1-resumo-do-mvp","title":"1. Resumo do MVP","text":"<p>O objetivo do MVP n\u00e3o \u00e9 entregar o projeto completo, mas sim uma fatia vertical funcional que prove que a ideia principal e a arquitetura funcionam de ponta a ponta. O foco \u00e9 m\u00e1ximo no ciclo de valor mais importante para o usu\u00e1rio final, que \u00e9: Ver um jogo -&gt; Fazer um palpite -&gt; Ganhar moedas por isso, para ent\u00e3o trocar por pacotes de figurinhas.</p>"},{"location":"Documentacao/escopo/#2-objetivo-do-mvp","title":"2. Objetivo do MVP","text":"<p>Entregar uma vers\u00e3o funcional e enxuta da aplica\u00e7\u00e3o que permita a um usu\u00e1rio se cadastrar, visualizar os jogos da rodada, submeter um palpite de placar e ser recompensado com moedas virtuais. O MVP deve validar a arquitetura (React + FastAPI + Docker + PostgreSQL), a integra\u00e7\u00e3o com a API externa, a implementa\u00e7\u00e3o de um CRUD completo (Cole\u00e7\u00f5es) e o ciclo da economia virtual (ganhar moedas e comprar pacotes).</p>"},{"location":"Documentacao/escopo/#3-principio-norteador","title":"3. Princ\u00edpio Norteador","text":"<p>\"Menos \u00e9 mais\". Foco absoluto no fluxo de engajamento principal e nos requisitos t\u00e9cnicos essenciais, cortando funcionalidades secund\u00e1rias para focar nas que s\u00e3o \"obrigat\u00f3rias\" para a avalia\u00e7\u00e3o.</p>"},{"location":"Documentacao/escopo/#4-funcionalidades-essenciais-escopo-do-mvp","title":"4. Funcionalidades ESSENCIAIS (Escopo do MVP)","text":""},{"location":"Documentacao/escopo/#backend-fastapi","title":"Backend (FastAPI)","text":"<ul> <li> <p>[\u2713] M\u00f3dulo de Administra\u00e7\u00e3o de Cole\u00e7\u00f5es (CRUD):</p> <ul> <li>Endpoints para um <code>admin</code> gerenciar as cole\u00e7\u00f5es de \u00e1lbuns: <code>POST</code>, <code>GET</code>, <code>PUT</code>, <code>DELETE /admin/colecoes/</code>.</li> </ul> </li> <li> <p>[\u2713] M\u00f3dulo de Usu\u00e1rios (M\u00ednimo):</p> <ul> <li><code>POST /register</code>: Cria um novo usu\u00e1rio, inicializando seu saldo de moedas.</li> <li><code>POST /token</code>: Faz login e gera um token de autentica\u00e7\u00e3o (JWT).</li> </ul> </li> <li> <p>[\u2713] M\u00f3dulo de Partidas e Palpites:</p> <ul> <li><code>GET /partidas/rodada-atual</code>: Busca e retorna os pr\u00f3ximos jogos.</li> <li><code>POST /partidas/{id}/palpitar</code>: Permite que o usu\u00e1rio envie seu palpite.</li> </ul> </li> <li> <p>[\u2713] M\u00f3dulo de Loja e Pacotes:</p> <ul> <li><code>POST /loja/comprar-pacote</code> (Protegido):<ol> <li>Verifica se o usu\u00e1rio tem moedas suficientes.</li> <li>Subtrai o custo do pacote do saldo do usu\u00e1rio.</li> <li>Sorteia N figurinhas aleat\u00f3rias da cole\u00e7\u00e3o ativa.</li> <li>Adiciona as figurinhas sorteadas \u00e0 cole\u00e7\u00e3o do usu\u00e1rio.</li> </ol> </li> <li><code>GET /me/album</code> (Protegido): Retorna a lista de figurinhas que o usu\u00e1rio possui.</li> </ul> </li> <li> <p>[\u2713] L\u00f3gica de Recompensa:</p> <ul> <li>Um script <code>processar_resultados.py</code> executado manualmente que compara palpites com resultados reais e adiciona moedas ao saldo dos usu\u00e1rios vencedores.</li> </ul> </li> </ul>"},{"location":"Documentacao/escopo/#frontend-react","title":"Frontend (React)","text":"<ul> <li>[\u2713] P\u00e1ginas de Autentica\u00e7\u00e3o: Cadastro e Login.</li> <li>[\u2713] P\u00e1gina de Administra\u00e7\u00e3o (Simplificada): Formul\u00e1rio e tabela para o CRUD de Cole\u00e7\u00f5es.</li> <li>[\u2713] P\u00e1gina Principal / Dashboard (Protegida):<ul> <li>Exibi\u00e7\u00e3o clara do saldo de moedas do usu\u00e1rio.</li> <li><code>Componente ListaDePartidas</code> para exibir jogos e permitir palpites.</li> </ul> </li> <li>[\u2713] P\u00e1gina da Loja (Simplificada):<ul> <li>Exibe o pacote de figurinhas dispon\u00edvel e seu custo em moedas.</li> <li>Cont\u00e9m um bot\u00e3o \"Comprar\" que chama a API do backend.</li> </ul> </li> <li>[\u2713] P\u00e1gina \"Meu \u00c1lbum\":<ul> <li><code>Componente MeuAlbumSimples</code> para exibir as figurinhas que o usu\u00e1rio possui.</li> </ul> </li> </ul>"},{"location":"Documentacao/escopo/#infraestrutura-e-banco-de-dados","title":"Infraestrutura e Banco de Dados","text":"<ul> <li>[\u2713] Docker &amp; Docker Compose: Arquivo <code>docker-compose.yml</code> funcional.</li> <li>[\u2713] Modelo de Dados (M\u00ednimo):<ul> <li><code>colecoes</code>: id, nome, ano, ativo.</li> <li><code>usuarios</code>: id, email, senha_hash, is_admin, moedas (int).</li> <li><code>figurinhas</code>: id, nome_jogador, numero, id_colecao (FK).</li> <li><code>usuario_figurinhas</code>: id_usuario, id_figurinha.</li> <li><code>partidas</code>: id, time_casa, time_visitante, data_jogo.</li> <li><code>palpites</code>: id_usuario, id_partida, palpite_gols_casa.</li> </ul> </li> </ul>"},{"location":"Documentacao/escopo/#5-o-que-fica-de-fora-do-mvp-corte-radical","title":"5. O que Fica de FORA do MVP (Corte Radical)","text":"<ul> <li>N\u00c3O FAZER: Sistema de trocas entre usu\u00e1rios.</li> <li>N\u00c3O FAZER: Diferentes tipos de pacotes na loja ou miss\u00f5es complexas.</li> <li>N\u00c3O FAZER: Perfis de usu\u00e1rio customiz\u00e1veis ou placares de l\u00edderes detalhados.</li> <li>N\u00c3O FAZER: Tabela de classifica\u00e7\u00e3o do campeonato.</li> <li>N\u00c3O FAZER: Design complexo ou anima\u00e7\u00f5es de abertura de pacote. A funcionalidade \u00e9 a prioridade.</li> </ul>"},{"location":"Documentacao/escopo/#6-fluxo-de-demonstracao-do-mvp-atualizado","title":"6. Fluxo de Demonstra\u00e7\u00e3o do MVP Atualizado","text":"<ol> <li>CRUD (Admin): \"Primeiro, como administrador, eu crio, leio, atualizo e deleto uma cole\u00e7\u00e3o de \u00e1lbum, como a 'Brasileir\u00e3o 2025'.\"</li> <li>Cadastro (Usu\u00e1rio): \"Agora, como um novo usu\u00e1rio, eu me cadastro na plataforma.\"</li> <li>Login e Visualiza\u00e7\u00e3o: \"Ao fazer login, vejo a tela principal com os jogos da rodada e meu saldo inicial de moedas.\"</li> <li>A\u00e7\u00e3o (Palpite): \"Vou palpitar que no jogo entre Time A e Time B o placar ser\u00e1 2 a 1.\"</li> <li>Processamento (Desenvolvedor): \"Simulando o fim da rodada, executo o script de processamento. Ele verifica os palpites e distribui as recompensas em moedas.\"</li> <li>Recompensa (Usu\u00e1rio): \"Ao atualizar a p\u00e1gina, vejo que meu saldo de moedas aumentou!\"</li> <li>Ciclo da Loja (Usu\u00e1rio): \"Com minhas moedas, vou at\u00e9 a Loja e clico em 'Comprar Pacote'. Meu saldo de moedas diminui.\"</li> <li>Resultado Final (Usu\u00e1rio): \"Vou para a p\u00e1gina 'Meu \u00c1lbum' e vejo as novas figurinhas aleat\u00f3rias que ganhei no pacote. O ciclo de jogo foi conclu\u00eddo com sucesso.\"</li> </ol>"},{"location":"Documentacao/escopo/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 25/09/2025 Cria\u00e7\u00e3o do documento e defini\u00e7\u00e3o do escopo inicial. Lucas V\u00edctor Lucas V\u00edctor <code>2.0</code> 27/09/2025 Refatora o escopo para incluir a economia de moedas e pacotes. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/frontend_overview/","title":"Documenta\u00e7\u00e3o do Frontend","text":""},{"location":"Documentacao/frontend_overview/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento descreve a arquitetura, as tecnologias e a estrutura do projeto frontend da plataforma Hub do Torcedor. A aplica\u00e7\u00e3o \u00e9 uma Single-Page Application (SPA), constru\u00edda para oferecer uma experi\u00eancia de usu\u00e1rio rica e interativa.</p>"},{"location":"Documentacao/frontend_overview/#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":"<ul> <li>Framework Principal: React 18+</li> <li>Linguagem: TypeScript</li> <li>Build Tool: Vite</li> <li>Roteamento: React Router DOM</li> <li>Requisi\u00e7\u00f5es HTTP: Axios</li> <li>Estiliza\u00e7\u00e3o: CSS puro</li> </ul>"},{"location":"Documentacao/frontend_overview/#estrutura-de-pastas","title":"Estrutura de Pastas","text":"<p>[cite_start]O c\u00f3digo-fonte da aplica\u00e7\u00e3o est\u00e1 organizado dentro da pasta <code>src/</code>, seguindo as melhores pr\u00e1ticas para projetos React[cite: 262]:</p> <ul> <li><code>src/assets/</code>: Para imagens, fontes e outros arquivos est\u00e1ticos que s\u00e3o importados pelos componentes.</li> <li><code>src/components/</code>: Cont\u00e9m componentes React reutiliz\u00e1veis que formam os blocos de constru\u00e7\u00e3o da UI (ex: <code>Button.tsx</code>, <code>Input.tsx</code>, <code>Header.tsx</code>).</li> <li><code>src/pages/</code>: Cont\u00e9m os componentes que representam as p\u00e1ginas completas da aplica\u00e7\u00e3o (ex: <code>LoginPage.tsx</code>, <code>DashboardPage.tsx</code>).</li> <li><code>src/services/</code>: Respons\u00e1vel por toda a comunica\u00e7\u00e3o com a API do backend. Centraliza as chamadas HTTP (ex: <code>api.ts</code>, <code>authService.ts</code>).</li> <li><code>src/styles/</code>: Cont\u00e9m os arquivos de estiliza\u00e7\u00e3o CSS para os componentes e p\u00e1ginas.</li> </ul>"},{"location":"Documentacao/frontend_overview/#fluxo-de-autenticacao","title":"Fluxo de Autentica\u00e7\u00e3o","text":"<p>O fluxo de login, que conecta o frontend ao backend, funciona da seguinte forma:</p> <ol> <li>O usu\u00e1rio preenche o formul\u00e1rio na <code>LoginPage.tsx</code>.</li> <li>Ao submeter, a fun\u00e7\u00e3o <code>handleSubmit</code> formata os dados como <code>form-data</code>.</li> <li>O servi\u00e7o <code>api</code> (configurado com Axios) envia uma requisi\u00e7\u00e3o <code>POST</code> para o endpoint <code>/token</code> do backend.</li> <li>Se as credenciais estiverem corretas, o backend retorna um token de acesso (JWT).</li> <li>O frontend recebe o token, salva-o no <code>localStorage</code> do navegador e redireciona o usu\u00e1rio para a p\u00e1gina principal (Dashboard) usando o React Router.</li> </ol>"},{"location":"Documentacao/frontend_overview/#como-executar","title":"Como Executar","text":"<p>Para executar o ambiente de desenvolvimento do frontend:</p> <ol> <li>Navegue at\u00e9 a pasta <code>frontend</code>.</li> <li>Instale as depend\u00eancias: <code>npm install</code></li> <li>Inicie o servidor: <code>npm run dev</code></li> </ol> <p>A aplica\u00e7\u00e3o estar\u00e1 dispon\u00edvel em <code>http://localhost:5173</code>.</p>"},{"location":"Documentacao/frontend_overview/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 28/09/2025 Cria\u00e7\u00e3o do documento de overview do frontend. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/logo_creation/","title":"Processo de Cria\u00e7\u00e3o da Logo","text":""},{"location":"Documentacao/logo_creation/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>A identidade visual \u00e9 um pilar fundamental para qualquer projeto. Para o Hub do Torcedor, o objetivo era criar uma logo que fosse moderna e minimalista, transmitindo a paix\u00e3o pelo futebol e a tecnologia da plataforma.</p> <p>O processo de cria\u00e7\u00e3o combinou a agilidade da intelig\u00eancia artificial para a gera\u00e7\u00e3o de conceitos com o refinamento manual e o olhar cr\u00edtico de um designer para garantir um resultado \u00fanico e de alta qualidade.</p>"},{"location":"Documentacao/logo_creation/#2-processo-de-criacao-e-ferramentas","title":"2. Processo de Cria\u00e7\u00e3o e Ferramentas","text":"<p>O desenvolvimento da logo seguiu um processo h\u00edbrido em duas etapas principais, utilizando a su\u00edte de design da plataforma Canva.</p>"},{"location":"Documentacao/logo_creation/#etapa-1-geracao-de-conceitos-com-inteligencia-artificial","title":"Etapa 1: Gera\u00e7\u00e3o de Conceitos com Intelig\u00eancia Artificial","text":"<p>A fase inicial de idea\u00e7\u00e3o foi acelerada com o uso da ferramenta de gera\u00e7\u00e3o de arte por IA do Canva, o \"Est\u00fadio M\u00e1gico\". A engenharia de prompt foi utilizada para direcionar a ferramenta a criar conceitos visuais alinhados com a vis\u00e3o do projeto.</p>"},{"location":"Documentacao/logo_creation/#prompt-utilizado","title":"Prompt Utilizado","text":"<p>O prompt principal, escrito em ingl\u00eas para maior precis\u00e3o, foi:</p> <p>\"Minimalist logo for a modern soccer fan app. A sleek shield icon containing the letters \"HT\". Flat design, vector art. The color palette is vibrant neon green on a dark charcoal gray background.\"</p> <p>Este comando instruiu a IA a focar em um \u00edcone de escudo minimalista com o monograma \"HT\", utilizando a paleta de cores oficial do projeto.</p>"},{"location":"Documentacao/logo_creation/#etapa-2-refinamento-e-vetorizacao-manual-no-canva","title":"Etapa 2: Refinamento e Vetoriza\u00e7\u00e3o Manual no Canva","text":"<p>O resultado gerado pela IA serviu como um excelente ponto de partida, mas n\u00e3o como produto final. Para atingir o n\u00edvel de qualidade e originalidade desejado, a arte foi editada manualmente no editor vetorial do Canva.</p> <p>Nesta etapa, foram realizados os seguintes ajustes cr\u00edticos:</p> <ul> <li>Ajustes Finos nos Vetores: As linhas e curvas do escudo foram corrigidas e suavizadas para garantir um acabamento mais limpo e profissional.</li> <li>Melhoria da Legibilidade: O monograma \"HT\" foi redesenhado e reposicionado para melhorar a legibilidade e o equil\u00edbrio visual dentro do escudo.</li> <li>Garantia de Simetria: O alinhamento e a simetria de todos os elementos foram verificados e ajustados manualmente para criar uma composi\u00e7\u00e3o harmoniosa.</li> </ul>"},{"location":"Documentacao/logo_creation/#3-logo-final","title":"3. Logo Final","text":"<p>O resultado desse processo h\u00edbrido \u00e9 uma logo robusta, moderna e alinhada \u00e0 identidade visual do Hub do Torcedor.</p> Fonte: Lucas V\u00edctor (2025)"},{"location":"Documentacao/logo_creation/#analise-dos-elementos","title":"An\u00e1lise dos Elementos:","text":"<ul> <li>\u00cdcone: Um escudo com facetas que sugerem um efeito 3D, transmitindo modernidade e robustez.</li> <li>Monograma: As letras \"HT\" estilizadas em uma fonte geom\u00e9trica e integradas de forma coesa ao escudo.</li> <li>Paleta de Cores: O uso do verde neon (<code>#00FF87</code>) sobre o fundo cinza-carv\u00e3o (<code>#1E212D</code>) garante alto contraste, legibilidade e refor\u00e7a a identidade tecnol\u00f3gica e vibrante da marca.</li> </ul>"},{"location":"Documentacao/logo_creation/#4-variacoes-e-uso","title":"4. Varia\u00e7\u00f5es e Uso","text":"<p>A logo final foi exportada em formatos SVG (vetorial) e PNG (com fundo transparente) para garantir sua aplica\u00e7\u00e3o em diversos contextos, como:</p> <ul> <li>Favicon na aba do navegador.</li> <li>Cabe\u00e7alho do site e da aplica\u00e7\u00e3o.</li> <li>Materiais de apresenta\u00e7\u00e3o e documentos.</li> </ul>"},{"location":"Documentacao/logo_creation/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 29/09/2025 Cria\u00e7\u00e3o do documento detalhando o processo inicial de confec\u00e7\u00e3o da logo com IA. Lucas V\u00edctor Lucas V\u00edctor <code>1.1</code> 29/09/2025 Detalhamento da etapa de refinamento manual e melhoria da estrutura do documento. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/prototipo_alta_fidelidade/","title":"Prot\u00f3tipo de Alta Fidelidade","text":""},{"location":"Documentacao/prototipo_alta_fidelidade/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O prot\u00f3tipo de alta fidelidade foi desenvolvido na ferramenta Figma e serve como uma representa\u00e7\u00e3o visual e interativa da aplica\u00e7\u00e3o \"Hub do Torcedor\". Ele segue as diretrizes definidas no Guia de Estilo e detalha o fluxo de navega\u00e7\u00e3o do usu\u00e1rio atrav\u00e9s das principais funcionalidades do MVP.</p>"},{"location":"Documentacao/prototipo_alta_fidelidade/#ferramenta","title":"Ferramenta","text":"<ul> <li>Figma</li> </ul>"},{"location":"Documentacao/prototipo_alta_fidelidade/#acesso-ao-prototipo","title":"Acesso ao Prot\u00f3tipo","text":"<p>O prot\u00f3tipo interativo pode ser acessado publicamente atrav\u00e9s do link abaixo. Tamb\u00e9m est\u00e1 dispon\u00edvel uma vers\u00e3o incorporada para visualiza\u00e7\u00e3o direta.</p> <ul> <li>Link P\u00fablico: https://www.figma.com/design/j0jqYOARxXDW6rLJ7771yb/Untitled</li> </ul> <p>Fonte: Lucas V\u00edctor, 2025</p>"},{"location":"Documentacao/prototipo_alta_fidelidade/#telas-principais","title":"Telas Principais","text":"<p>Para visualizar todas as telas do prot\u00f3tipo, clique no link abaixo. O PDF ser\u00e1 aberto em uma nova aba do seu navegador.</p> <p>Visualizar Prot\u00f3tipo em PDF</p>"},{"location":"Documentacao/prototipo_alta_fidelidade/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 29/09/2025 Cria\u00e7\u00e3o do documento com o link e screenshots do prot\u00f3tipo de alta fidelidade. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/requisitos_elicitados/","title":"Requisitos Elicitados - Hub do Torcedor","text":""},{"location":"Documentacao/requisitos_elicitados/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O aplicativo Hub do Torcedor \u00e9 um sistema que visa oferecer aos f\u00e3s de futebol uma plataforma de entretenimento completa, combinando um \u00e1lbum de figurinhas digital com um sistema de palpites em jogos reais. Para garantir que a aplica\u00e7\u00e3o atenda \u00e0s necessidades e expectativas dos usu\u00e1rios, foram definidos uma s\u00e9rie de requisitos funcionais (RF) e requisitos n\u00e3o funcionais (RNF) durante o processo de idea\u00e7\u00e3o do projeto. Esses requisitos desempenham um papel fundamental na defini\u00e7\u00e3o do escopo do MVP (Produto M\u00ednimo Vi\u00e1vel) e na orienta\u00e7\u00e3o do desenvolvimento da aplica\u00e7\u00e3o. Os requisitos elicitados vieram principalmente das t\u00e9cnicas de Introspec\u00e7\u00e3o e Brainstorming.</p>"},{"location":"Documentacao/requisitos_elicitados/#metodologia","title":"Metodologia","text":"<p>A metodologia adotada envolveu a consolida\u00e7\u00e3o de todos os requisitos funcionais (RF) e requisitos n\u00e3o funcionais (RNF) definidos para o escopo do MVP em uma tabela estruturada. Nesta tabela, cada requisito \u00e9 identificado por um ID exclusivo, categorizado como RF ou RNF para indicar seu tipo e acompanhado de um status de implementa\u00e7\u00e3o para o MVP. Al\u00e9m disso, a tabela tamb\u00e9m rastreia a origem de cada requisito, destacando se ele foi obtido por meio de t\u00e9cnicas como a Introspec\u00e7\u00e3o (a vis\u00e3o do que um usu\u00e1rio esperaria) ou Brainstorming (a constru\u00e7\u00e3o de ideias para a funcionalidade).</p> <p>Essa abordagem de registro em tabela oferece uma vis\u00e3o organizada e estruturada dos requisitos do projeto, permitindo uma f\u00e1cil refer\u00eancia e acompanhamento ao longo do ciclo de desenvolvimento. Ela promove a rastreabilidade, garantindo que todas as necessidades do projeto sejam devidamente consideradas e atendidas.</p> <p>A legenda para cada sigla \u00e9 a seguinte:</p> <p>Tabela 1: Legenda para a tabela 2 de requisitos do Hub do Torcedor. </p> Tipo Descri\u00e7\u00e3o RF Requisito Funcional RNF Requisito N\u00e3o-Funcional IS Requisito elicitado pela Introspec\u00e7\u00e3o BS Requisito elicitado pelo Brainstorming <p>Fonte: Lucas, 2025</p>"},{"location":"Documentacao/requisitos_elicitados/#tabela-de-requisitos-elicitados-para-o-mvp","title":"Tabela de requisitos elicitados para o MVP","text":"<p>Tabela 2: Requisitos elicitados do aplicativo Hub do Torcedor</p> ID C\u00f3digo Descri\u00e7\u00e3o Status Rastreabilidade HT01 RF O administrador deve poder criar uma nova cole\u00e7\u00e3o de \u00e1lbum (ex: \"Brasileir\u00e3o 2025\"). A Fazer BS HT02 RF O administrador deve poder visualizar todas as cole\u00e7\u00f5es de \u00e1lbuns cadastradas. A Fazer BS HT03 RF O administrador deve poder atualizar os dados de uma cole\u00e7\u00e3o de \u00e1lbum existente. A Fazer BS HT04 RF O administrador deve poder excluir uma cole\u00e7\u00e3o de \u00e1lbum. A Fazer BS HT05 RF O sistema deve permitir que um novo usu\u00e1rio se cadastre usando e-mail e senha. A Fazer IS HT06 RF O sistema deve permitir que um usu\u00e1rio existente fa\u00e7a login. A Fazer IS HT07 RNF A autentica\u00e7\u00e3o do usu\u00e1rio deve ser realizada via tokens JWT (JSON Web Token). A Fazer BS HT08 RNF As senhas dos usu\u00e1rios devem ser armazenadas de forma segura (com hash). A Fazer BS HT09 RF O sistema deve exibir os jogos da rodada atual para o usu\u00e1rio. A Fazer IS, BS HT10 RNF Os dados das partidas devem ser obtidos de uma API externa confi\u00e1vel. A Fazer BS HT11 RF O usu\u00e1rio deve poder submeter um palpite de placar para um jogo futuro. A Fazer IS, BS HT12 RF O usu\u00e1rio deve receber um pacote de figurinhas inicial ao se cadastrar. A Fazer BS HT13 RF O usu\u00e1rio deve poder visualizar as figurinhas que possui em seu \u00e1lbum. A Fazer IS HT14 RF O sistema deve premiar com figurinhas os usu\u00e1rios que acertarem seus palpites. A Fazer BS HT15 RNF A aplica\u00e7\u00e3o (backend, frontend, BD) deve ser containerizada usando Docker. A Fazer BS HT16 RNF A interface do usu\u00e1rio deve ser responsiva, adaptando-se a telas de desktop e mobile. A Fazer IS <p>Fonte: Lucas V\u00edctor, 2025</p>"},{"location":"Documentacao/requisitos_elicitados/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 25/09/2025 Cria\u00e7\u00e3o do documento e defini\u00e7\u00e3o dos requisitos elicitados para o MVP. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/run-guide/","title":"Guia de Execu\u00e7\u00e3o","text":"<p>Este documento fornece as instru\u00e7\u00f5es passo a passo para configurar e executar o ambiente de desenvolvimento do projeto Hub do Torcedor.</p>"},{"location":"Documentacao/run-guide/#1-pre-requisitos","title":"1. Pr\u00e9-requisitos","text":"<p>Antes de come\u00e7ar, garanta que voc\u00ea tenha os seguintes softwares instalados na sua m\u00e1quina:</p> <ul> <li>Docker</li> <li>Docker Compose</li> </ul>"},{"location":"Documentacao/run-guide/#2-executando-o-ambiente-completo","title":"2. Executando o Ambiente Completo","text":"<p>O projeto \u00e9 totalmente containerizado, o que simplifica a execu\u00e7\u00e3o. O comando a seguir ir\u00e1 construir as imagens necess\u00e1rias, criar e iniciar os cont\u00eaineres para o backend e o banco de dados.</p> <ol> <li>Navegue at\u00e9 a pasta raiz do reposit\u00f3rio <code>backend</code>.</li> <li>Execute o seguinte comando no seu terminal:     <pre><code>docker compose up --build\n</code></pre><ul> <li>O argumento <code>--build</code> for\u00e7a a reconstru\u00e7\u00e3o da imagem da aplica\u00e7\u00e3o caso haja alguma altera\u00e7\u00e3o no c\u00f3digo ou nas depend\u00eancias.</li> <li>Espere at\u00e9 que os logs se estabilizem e mostrem que o banco de dados est\u00e1 pronto para aceitar conex\u00f5es e que o servidor Uvicorn (FastAPI) est\u00e1 rodando.</li> </ul> </li> </ol>"},{"location":"Documentacao/run-guide/#3-acessando-a-api-e-a-documentacao","title":"3. Acessando a API e a Documenta\u00e7\u00e3o","text":"<p>Com os cont\u00eaineres em execu\u00e7\u00e3o, a API estar\u00e1 acess\u00edvel no seu navegador:</p> <ul> <li>Documenta\u00e7\u00e3o Interativa (Swagger UI): Para ver e testar todos os endpoints da API, acesse:<ul> <li>http://localhost:8000/docs</li> </ul> </li> </ul>"},{"location":"Documentacao/run-guide/#4-rodando-os-testes-automatizados","title":"4. Rodando os Testes Automatizados","text":"<p>Os testes do backend devem ser executados dentro do cont\u00eainer da aplica\u00e7\u00e3o para garantir consist\u00eancia no ambiente.</p> <ol> <li>Com os cont\u00eaineres j\u00e1 em execu\u00e7\u00e3o (ap\u00f3s o <code>docker compose up</code>), abra um novo terminal.</li> <li>Entre no shell do cont\u00eainer do backend com o seguinte comando:     <pre><code>docker exec -it hub_torcedor_backend bash\n</code></pre></li> <li>Dentro do cont\u00eainer, instale as depend\u00eancias de desenvolvimento:     <pre><code>pip install -r requirements-dev.txt\n</code></pre></li> <li>Execute o <code>pytest</code>:     <pre><code>pytest\n</code></pre>     A sa\u00edda deve indicar o n\u00famero de testes que passaram e foram pulados (<code>skipped</code>).</li> </ol>"},{"location":"Documentacao/run-guide/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 29/09/2025 Cria\u00e7\u00e3o do documento com as instru\u00e7\u00f5es para executar o projeto e os testes. Lucas V\u00edctor Lucas V\u00edctor"},{"location":"Documentacao/style-guide/","title":"Guia de Estilo - Hub do Torcedor","text":""},{"location":"Documentacao/style-guide/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este documento define as diretrizes visuais e de estilo para a interface do usu\u00e1rio (UI) da plataforma Hub do Torcedor. O objetivo \u00e9 garantir consist\u00eancia, usabilidade e uma identidade visual coesa em toda a aplica\u00e7\u00e3o.</p>"},{"location":"Documentacao/style-guide/#1-paleta-de-cores","title":"1. Paleta de Cores","text":"<p>A paleta foi escolhida para criar um ambiente moderno e imersivo, com alto contraste para garantir a legibilidade, conforme a diretriz WCAG.</p> Cor Hex Code Nome Uso Principal \u26ab\ufe0f <code>#1E212D</code> Fundo Escuro Cor principal de fundo da aplica\u00e7\u00e3o. \ud83d\udfe2 <code>#00FF87</code> Verde Destaque A\u00e7\u00f5es prim\u00e1rias (bot\u00f5es, links, \u00edcones ativos). \u26aa\ufe0f <code>#FFFFFF</code> Branco Texto principal e t\u00edtulos. \ud83d\udd18 <code>#767070</code> Cinza M\u00e9dio Texto secund\u00e1rio, placeholders e bordas. <p>Fonte: Lucas V\u00edctor, 2025</p>"},{"location":"Documentacao/style-guide/#2-tipografia","title":"2. Tipografia","text":"<p>Foram escolhidas duas fontes do Google Fonts, conhecidas pela sua legibilidade e estilo moderno.</p> <ul> <li>T\u00edtulos e Cabe\u00e7alhos: <code>Montserrat</code></li> <li>Corpo de Texto e Par\u00e1grafos: <code>Lato</code></li> </ul>"},{"location":"Documentacao/style-guide/#escala-de-tamanhos-base","title":"Escala de Tamanhos Base","text":"<ul> <li>T\u00edtulo Principal (H1): 32px</li> <li>Subt\u00edtulo (H2): 24px</li> <li>Texto Normal (p): 16px</li> <li>Texto Pequeno/Legenda: 14px</li> </ul>"},{"location":"Documentacao/style-guide/#3-componentes","title":"3. Componentes","text":""},{"location":"Documentacao/style-guide/#botao-button","title":"Bot\u00e3o (Button)","text":"<ul> <li>Radius (Raio da Borda): 20px </li> <li>Estilo Prim\u00e1rio: Fundo <code>Verde Destaque</code>, texto <code>Fundo Escuro</code>.</li> </ul>"},{"location":"Documentacao/style-guide/#4-iconografia","title":"4. Iconografia","text":"<p>Os \u00edcones devem ser consistentes e autoexplicativos. Sugest\u00f5es de \u00edcones para a\u00e7\u00f5es comuns: * Adicionar: <code>+</code> * Editar: \u00cdcone de l\u00e1pis * Excluir: \u00cdcone de lixeira * Visualizar: \u00cdcone de olho * Configura\u00e7\u00f5es: \u00cdcone de engrenagem</p>"},{"location":"Documentacao/style-guide/#historico-de-versoes","title":"Hist\u00f3rico de Vers\u00f5es","text":"Vers\u00e3o Data Descri\u00e7\u00e3o Autor Revisor <code>1.0</code> 29/09/2025 Cria\u00e7\u00e3o do documento definindo a identidade visual do projeto. Lucas V\u00edctor Lucas V\u00edctor"}]}